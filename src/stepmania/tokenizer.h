#pragma once

#include <utf8.h>
#include <stdbool.h>

#include "../common.h"
#include "../data_descriptor.h"
#include "../list.h"
#include "types.h"

typedef enum {
    RCONV_STEPMANIA_TOKENIZER_STATE_CLEAN = 0,
    RCONV_STEPMANIA_TOKENIZER_STATE_IN_PROPERTY_NAME = 1,
    RCONV_STEPMANIA_TOKENIZER_STATE_IN_VALUE = 2,
    RCONV_STEPMANIA_TOKENIZER_STATE_IN_STRING = 3,
    RCONV_STEPMANIA_TOKENIZER_STATE_IN_NOTES_META = 4,
    RCONV_STEPMANIA_TOKENIZER_STATE_IN_NOTES = 5,
    RCONV_STEPMANIA_TOKENIZER_STATE_IN_LINE_COMMENT = 6,
} RconvStepmaniaTokenizerState;

#define RCONV_STEPMANIA_TOKENIZER_CHAR_VALUE_SEPARATOR_EQUALS '='
#define RCONV_STEPMANIA_TOKENIZER_CHAR_VALUE_SEPARATOR_COMMA ','
#define RCONV_STEPMANIA_TOKENIZER_CHAR_VALUE_SEPARATOR_COLON ':'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_NEW_LINE '\n'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_SINGLE_QUOTE '\''
#define RCONV_STEPMANIA_TOKENIZER_CHAR_DOUBLE_QUOTE '"'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_PROPERTY_START '#'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_VALUE_START ':'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_VALUE_END ';'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_COMMENT_START '/'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_COMMENT_END '\n'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_ESCAPE_VALUE '\\'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_RADAR_SEPARTAOR ','
#define RCONV_STEPMANIA_TOKENIZER_CHAR_NOTES_META_SEPARATOR ':'
#define RCONV_STEPMANIA_TOKENIZER_CHAR_BEAT_SEPARATOR ','
#define RCONV_STEPMANIA_TOKENIZER_CHAR_SNAP_SEPARATOR '\n'

RconvToken**
rconv_stepmania_tokenize(RconvDataDescriptor* dd, int* length);
